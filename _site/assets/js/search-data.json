{"0": {
    "doc": "Resources",
    "title": "Resources",
    "content": "Below, you can find various resources to help with your understanding of the material throughout the summer. ",
    "url": "http://localhost:4000/sp23/6resources/",
    "relUrl": "/6resources/"
  },"1": {
    "doc": "Resources",
    "title": "Lab Resources",
    "content": ". | Useful blocks in Snap! | Snap tips and tricks | Debugging Snap! | . ",
    "url": "http://localhost:4000/sp23/6resources/#lab-resources",
    "relUrl": "/6resources/#lab-resources"
  },"2": {
    "doc": "Resources",
    "title": "Content Guides and Videos",
    "content": ". | Yolanda’s For-Loop Guide | Yolanda’s Guide to Commenting Your Code | Yolanda’s Debugging Walkthrough | Dani’s Scoping Guide | Murtz’s Guide to Solving Recursion Problems | Murtz’s Overview of Mutability | . ",
    "url": "http://localhost:4000/sp23/6resources/#content-guides-and-videos",
    "relUrl": "/6resources/#content-guides-and-videos"
  },"3": {
    "doc": "Resources",
    "title": "Python Resources",
    "content": ". | Official Python Documentation | CS 61A’s Terminal Guide | Jake’s Python Debugging Guide | . ",
    "url": "http://localhost:4000/sp23/6resources/#python-resources",
    "relUrl": "/6resources/#python-resources"
  },"4": {
    "doc": "Resources",
    "title": "Project Walkthroughs and Hint Videos",
    "content": ". | Project 2: Matching 123 Slots Hint Video | . ",
    "url": "http://localhost:4000/sp23/6resources/#project-walkthroughs-and-hint-videos",
    "relUrl": "/6resources/#project-walkthroughs-and-hint-videos"
  },"5": {
    "doc": "Resources",
    "title": "Past Exams",
    "content": "| Year | Quest | Midterm (Without-Snap!) | Midterm (With-Snap!) | Final (Paper) | Final (In-Lab) | . | Summer 2022 | - | Exam Solutions | Exam + Solutions | Exam Solutions | Exam Skeleton Code + Solutions | . | Spring 2020 | Exam Solutions | - | - | Exam Solutions | Exam Solutions | . | Fall 2019 | Exam Solutions | Exam Solutions | Exam Solutions | Exam Solutions | - | . | Summer 2019 | Exam Solutions | Exam Solutions | Exam Solutions | - | - | . | Spring 2019 | Exam Solutions | Exam Solutions | Exam Solutions | Exam Solutions | Exam Solutions | . | Fall 2018 | Exam Solutions | Exam Part 1 Solutions Part 1 Exam Part 2 Solutions Part 2 | Exam Solutions | Exam Solutions | Exam Solutions | . | Summer 2018 | - | Exam Solutions | Exam Solutions | Exam Solutions | Exam Solutions | . | Spring 2018 | Exam Solutions | Exam Part 1 Solutions Part 1 Exam Part 2 Solutions Part 2 | Exam Solutions | Exam Solutions | Exam Solutions | . | Summer 2017 | - | Exam Solutions | - | Exam Solutions | - | . ",
    "url": "http://localhost:4000/sp23/6resources/#past-exams",
    "relUrl": "/6resources/#past-exams"
  },"6": {
    "doc": "Resources",
    "title": "Other",
    "content": "EECS Incident Reporting Form . ",
    "url": "http://localhost:4000/sp23/6resources/#other",
    "relUrl": "/6resources/#other"
  },"7": {
    "doc": "Announcements",
    "title": "Announcements",
    "content": "Here, you can find all weekly announcements for the Fall. ",
    "url": "http://localhost:4000/sp23/announcements/",
    "relUrl": "/announcements/"
  },"8": {
    "doc": "Announcements",
    "title": "Week 2 Announcements",
    "content": "Jan 23 &middot; 1 min read ",
    "url": "http://localhost:4000/sp23/announcements/",
    "relUrl": "/announcements/"
  },"9": {
    "doc": "Announcements",
    "title": "General Reminders",
    "content": ". | Weekly-Blast 2 has been posted on Ed. Note that weekly blasts are required readings in CS10. | Project 1 : Wordle™-lite has been released! You can reference Week 1 of the course calendar below to find the spec. | We have started check offs for all labs as of Week 2. Please use the partner threads on Ed or talk to your Lab TA if you’re struggling to find a partner. | Please email cs10@ if you are a late add (added the course after Week 1) and/or if you don’t have access to Edstem or Gradescope. | The add/drop deadline is Wednesday, February 8th. All adds/drops after this Friday, 1/27 will result in a add/drop fee, so do keep this in mind and talk to anyone on staff if you need any guidance regarding such a decision. | . ",
    "url": "http://localhost:4000/sp23/announcements/#general-reminders",
    "relUrl": "/announcements/#general-reminders"
  },"10": {
    "doc": "Announcements",
    "title": "Week 1 Announcements",
    "content": "Jan 17 &middot; 0 min read ",
    "url": "http://localhost:4000/sp23/announcements/",
    "relUrl": "/announcements/"
  },"11": {
    "doc": "Announcements",
    "title": "Course Material Accesses &amp; Weekly Blasts",
    "content": ". | Weekly-Blast 0 has been posted on Ed- it contains time-sensitive information about lab and discussion section signups. Please read it ASAP, and note that weekly blasts are required reading in CS10. | If you’ve recently added the course and don’t have access to Edstem or Gradescope, please wait 24 hours, and then email cs10@ | . ",
    "url": "http://localhost:4000/sp23/announcements/#course-material-accesses--weekly-blasts",
    "relUrl": "/announcements/#course-material-accesses--weekly-blasts"
  },"12": {
    "doc": "Announcements",
    "title": "Week 0 Announcements",
    "content": "Jan 13 &middot; 0 min read ",
    "url": "http://localhost:4000/sp23/announcements/",
    "relUrl": "/announcements/"
  },"13": {
    "doc": "Announcements",
    "title": "Website is Still Under Construction",
    "content": ". | To those of you who stumbled upon this website…welcome! However, we’re still under construction, so the information on here is subject to change. Come back next week for updates. | . ",
    "url": "http://localhost:4000/sp23/announcements/#website-is-still-under-construction",
    "relUrl": "/announcements/#website-is-still-under-construction"
  },"14": {
    "doc": "CS10 Homework Assignment",
    "title": "CS10 Homework Assignment",
    "content": "Open In New Tab . There should be an assignment here. Oops! ",
    "url": "http://localhost:4000/sp23/assignment/",
    "relUrl": "/assignment/"
  },"15": {
    "doc": "Discussion",
    "title": "Discussion",
    "content": "This page will be updated with discussion worksheets and solutions throughout the semester. Recordings, when available, will also be posted here. | Discussion 1 Snap! Basics | worksheet | solutions | recording | . | Discussion 2 Number Rep &amp; Control | worksheet | solutions | notes/slides | recording | . | Discussion 3 Domain/Range, Scoping, Lists &amp; HOFs | worksheet | [solutions] | [notes/slides] | [recording] | . ",
    "url": "http://localhost:4000/sp23/discussion/",
    "relUrl": "/discussion/"
  },"16": {
    "doc": "Home",
    "title": "CS 10: The Beauty and Joy of Computing",
    "content": "UC Berkeley, Spring 2023 . A gentle but thorough introduction to computer science. Instructor: Teaching Professor Dan Garcia . ",
    "url": "http://localhost:4000/sp23/#cs-10-the-beauty-and-joy-of-computing",
    "relUrl": "/#cs-10-the-beauty-and-joy-of-computing"
  },"17": {
    "doc": "Home",
    "title": "Week 2 Announcements",
    "content": "Jan 23 &middot; 1 min read ",
    "url": "http://localhost:4000/sp23/",
    "relUrl": "/"
  },"18": {
    "doc": "Home",
    "title": "General Reminders",
    "content": ". | Weekly-Blast 2 has been posted on Ed. Note that weekly blasts are required readings in CS10. | Project 1 : Wordle™-lite has been released! You can reference Week 1 of the course calendar below to find the spec. | We have started check offs for all labs as of Week 2. Please use the partner threads on Ed or talk to your Lab TA if you’re struggling to find a partner. | Please email cs10@ if you are a late add (added the course after Week 1) and/or if you don’t have access to Edstem or Gradescope. | The add/drop deadline is Wednesday, February 8th. All adds/drops after this Friday, 1/27 will result in a add/drop fee, so do keep this in mind and talk to anyone on staff if you need any guidance regarding such a decision. | . Previous Announcemnts ",
    "url": "http://localhost:4000/sp23/#general-reminders",
    "relUrl": "/#general-reminders"
  },"19": {
    "doc": "Home",
    "title": "CS10 Calendar",
    "content": "| Week | Date | Lecture | Readings | Lab | Discussion | Assignment | . | 1 | Mon 1/16 | HOLIDAY | | | | | . | Tue 1/17 | | | NO LAB | | | . | Wed 1/18 | 1. Welcome to CS10 &amp; Abstraction (slides) | | | | Section Signups Due | . | Thur 1/19 | | | 1. Welcome to Snap! (No Checkoff) | | | . | Fri 1/20 | | | | 1. Snap! Basics | PROJ 1 released (due 2/3) | . | 2 | Mon 1/23 | 2. Functions (Slides) | Week 2 Readings | | | RQ 1 (due 1/27) | . | Tue 1/24 | | | 2. Build Your Own Blocks (due 1/26) | | | . | Wed 1/25 | 3. Numbers and Abstraction (Slides) | | | | | . | Thur 1/26 | | | 3. Conditionals, Reporters &amp; Abstraction (due 1/31) | | | . | Fri 1/27 | | | | 2. Number Rep &amp; Control | RQ 1 Due | . | 3 | Mon 1/30 | 4. Variables, Scope, Lists &amp; HOFs (Slides) | Week 3 Readings | | | PROJ 1 PARTY RQ 2(due 2/03) | . | Tue 1/31 | | | 4. Lists &amp; HOFs (due 2/02) | | PROJ 1 Due | . | Wed 2/01 | 5. Algorithms (Slides) | | | | PROJ 2: Wordle (due 2/15) | . | Thur 2/02 | | | 5. Algorithms (due 2/07) | | | . | Fri 2/03 | | | | 3. Domain/Range, Scoping, Lists &amp; HOFs | RQ 2 Due | . | 4 | Mon 2/06 | 6. Algorithmic Complexity | Week 4 Readings | | | PROJ 2 Party QUEST REVIEW RQ 3(due 2/10) | . | Tue 2/07 | | | 6. Algorithmic Complexity (due 2/14) | | | . | Wed 2/08 | 7. Social Implications I | | | | | . | Thur 2/09 | | | PROJ 2 Work Session/QUEST Review | | | . | Fri 2/10 | | | | 4. Algorithms | QUEST (due 2/12) | . | 5 | Mon 2/13 | 8. Social Implications II | | | | PROJ 2 Party | . | Tue 2/14 | | | 7. Boards (due 2/16) | | | . | Wed 2/15 | 9. Testing + 2048 | | | | PROJ 2 Due | . | Thur 2/16 | | | 8. Testing + 2048 (due 2/21) | | | . | Fri 2/17 | | | | 5. Algorithmic Complexity | PROJ 3: 2048 (due 3/02) | . | 6 | Mon 2/20 | Holiday | | | | | . | Tue 2/21 | | Week 6 Readings | 9. Trees &amp; Fractals (due 2/28) | | RQ 4(due 2/24) | . | Wed 2/22 | 10. Recursion I | | | | | . | Thur 2/23 | | | PROJ Work Session | | | . | Fri 2/24 | | | | 6. Recursion I | RQ 4 Due | . | 7 | Mon 2/27 | 11. Recursion II (Fractals) | Week 7 Readings | | | PROJ 3 PARTY RQ 5(due 3/03) | . | Tue 2/28 | | | 10. Recursive Reporters (due 3/07) | | | . | Wed 3/01 | 12. Recursion III (Count Change) | | | | | . | Thur 3/02 | | | PROJ Work Session | | PROJ 3 Due | . | Fri 3/03 | | | | 7. Recursion II | PROJ 4: Explore Post (post: due 3/20) (comments: due 3/24) RQ 5 Due | . | 8 | Mon 3/06 | 13. Procedures as Data (HOFs) | Week 8 Readings | | | MIDTERM Review RQ 6(due 3/10) | . | Tue 3/07 | | | 11. Functions as Data (HOFs) (due 3/16) | | | . | Wed 3/08 | 14. Programming Paradigms | | | | | . | Thur 3/09 | | | Midterm Work Session | | | . | Fri 3/10 | | | | 8. Python Basics | MIDTERM (w/o Snap!) (due 3/13) RQ 6 Due | . | 9 | Mon 3/13 | 15. Python I | | | | | . | Tue 3/14 | | | 12. Welcome to Python (due 3/21) | | | . | Wed 3/15 | Guest Lecture | | | | | . | Thur 3/16 | | | MIDTERM (w/ Snap!) (due 3/19) | | | . | Fri 3/17 | | | | NO CLASS (midterm) | | . | 10 | Mon 3/20 | 16. Python II | Week 10 Readings | | | PROJ 4 (post) DUE PROJ 5: Pyturis(due 4/05) RQ 7(due 3/24) | . | Tue 3/21 | | | 13. Python Data Structures (due 3/23) | | | . | Wed 3/22 | Guest Lecture | | | | | . | Thur 3/23 | | | 14. OOP in Python (due 4/04) | | | . | Fri 3/24 | | | | 10. Python Data Structures | PROJ 4 (comments) Due Final Project Proposals (due 4/03) RQ 7 Due | . | 11 | Mon 3/27 | Spring Recess | | | | | . | Tue 3/28 | | | Spring Recess | | | . | Wed 3/29 | Spring Recess | | | | | . | Thur 3/30 | | | Spring Recess | | | . | Fri 3/31 | | | | Spring Recess | | . | 12 | Mon 4/03 | 17. Python III (OOP) | Week 12 Readings | | | PROJ 5 Party FINAL PROJ Proposals Due RQ 8(due 4/07) | . | Tue 4/04 | | | 15. Text Processing in Python (due 4/13) | | FINAL PROJ(due 4/28) | . | Wed 4/05 | 18. Python IV (HOFs) | | | | PROJ 5 DUE | . | Thur 4/06 | | | PROPOSAL REVIEWS | | | . | Fri 4/07 | | | | 12. OOP | | . | 13 | Mon 4/10 | 19. Social Implications III | Week 13 Readings | | | RQ 9(due 4/14) | . | Tue 4/11 | | | PROPOSAL REVIEWS | | | . | Wed 4/12 | 20. Python V (Tree Recursion, Game Theory) | | | | | . | Thur 4/13 | | | 16. Intro to Data Science (due 4/18) | | | . | Fri 4/14 | | | | 13. Python HOFs, Lambdas, Tree Recursion | RQ 9 Due | . | 14 | Mon 4/17 | 21. Concurrency | Week 14 Readings | | | Final PROJ Party RQ 10(due 4/21) | . | Tue 4/18 | | | 17. Concurrency (due 4/20) | | | . | Wed 4/19 | 22. HCI | | | | | . | Thur 4/20 | | | 18. Snap! &amp; Python Libraries (due 4/27) | | | . | Fri 4/21 | | | | 14. Social Implications Studies Using Big Data | RQ 10 Due | . | 15 | Mon 4/24 | 23. Alumni Panel | Week 15 Readings | | | FINAL Proj Party POSTTERM Review RQ 11 | . | Tue 4/25 | | | PROJ Work Session | | | . | Wed 4/26 | 24. Conclusion and Farewell | | | | | . | Thur 4/27 | | | PROJ Work Session/Postterm Review | | | . | Fri 4/28 | | | | 15. Postterm Review &amp; Farewell | POSTTERM(due 5/02) Final PROJ Due RQ 11 Due | . | 16 | Mon 5/01 | RRR | | | | | . | Tue 5/02 | | | RRR | | | . | Wed 5/03 | RRR | | | | | . | Thur 5/04 | | | RRR | | | . | Fri 5/05 | | | | RRR | | . | 17 | Mon 5/08 | NO CLASS | | | | | . | Tue 5/09 | | | NO CLASS | | | . | Wed 5/10 | NO CLASS | | | | | . | Thur 5/11 | | | NO CLASS | | | . | Fri 5/12 | | | | NO CLASS | | . ",
    "url": "http://localhost:4000/sp23/#cs10-calendar",
    "relUrl": "/#cs10-calendar"
  },"20": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "http://localhost:4000/sp23/",
    "relUrl": "/"
  },"21": {
    "doc": "Calendar (JS)",
    "title": "Calendar (JS)",
    "content": "| Week | Date | Lecture | Readings | Lab | Discussion | Assignment | . | ",
    "url": "http://localhost:4000/sp23/cal",
    "relUrl": "/cal"
  },"22": {
    "doc": "Lab Check-Off Questions",
    "title": "Lab Check-Offs",
    "content": "On this page, you will find a list of check-off questions for each lab. Lab 1 Welcome to Snap! View Lab 1 . | No checkoff needed for Lab 1! . | . Lab 2 Build Your Own Blocks View Lab 2 . | Show your Field of Flowers. | Show your random-walk sprite. | Show your draw square-leaved flower...` block. | Why should you Build Your Own Blocks? Give a reason that someone may create a custom block. | What are some different ways to achieve repetition? Name at least 2. | . Lab 3 Conditionals, Reporters &amp; Abstraction View Lab 3 . | What is a Boolean? Explain why we use them, and give examples of functions that report a Boolean value. | What does the mystery reporter (at the bottom of the “Reporter Blocks” page) report when run with the inputs hello and 5? . | Name a few of the input types. Why is it important that we specify input types? . | Explain the difference between a command and a reporter block. | How are global variables different from script variables? . | Show us your traffic signal and letter grade blocks. | Show us the is _ between _ and _ ? block. | Show and explain your sum of two smallest block. | . Lab 4 Lists and HOFs View Lab 4 . | What is a list? Why would we use a list of 10 elements instead of just making 10 variables? . | What do map, keep, and combine each do? . | What is the difference between the for each (item) loop and the for (i) loop we have used in previous labs? . | Show us your acronym block. | Show us your expand block. | . Lab 5 Algorithms View Lab 5 . | What is an algorithm? Please give an example both in real life and from class. | Are algorithms which are (on average) faster always “better”? Why or why not? . | What might some “trade-offs” to different computer science algorithms be? . | How can abstraction and algorithms relate in computer science? . | Please show both your findNumberInUnsortedList and findNumberInSortedList functions and describe the difference in the algorithms used. | . ",
    "url": "http://localhost:4000/sp23/lab-checkoffs/#lab-check-offs",
    "relUrl": "/lab-checkoffs/#lab-check-offs"
  },"23": {
    "doc": "Lab Check-Off Questions",
    "title": "Lab Check-Off Questions",
    "content": " ",
    "url": "http://localhost:4000/sp23/lab-checkoffs/",
    "relUrl": "/lab-checkoffs/"
  },"24": {
    "doc": "Assigned Readings",
    "title": "Readings",
    "content": "This page will be updated with links to readings throughout the semester. Week 2 Reading (for RQ 1) . | Required: Learning to Code | Reading Quiz Question: Why is learning how to code important? Are you convinced about the importance of computer science in the world today? Include at least one point made in the video, ‘Code Stars’. (Expected length: 2 - 4 sentences). | . Week 3 Reading (for RQ 2) . | Required: Introduction to Abstraction | Reading Quiz Question: Why is a car a good example of abstraction? Using this example, give one reason why abstraction is helpful and then also give one reason why abstraction can do more harm than good. Finally, what is an example of abstraction in your daily life? (Expected length: 2 - 4 sentences). | . ",
    "url": "http://localhost:4000/sp23/readings/#readings",
    "relUrl": "/readings/#readings"
  },"25": {
    "doc": "Assigned Readings",
    "title": "Assigned Readings",
    "content": " ",
    "url": "http://localhost:4000/sp23/readings/",
    "relUrl": "/readings/"
  },"26": {
    "doc": "Daily Schedule",
    "title": "Daily Schedule (Updated Each Week)",
    "content": "If the calendar below appears blank, make sure you’re signed in to your Berkeley email! . As an alternative, use (this link) . | 7:00 AM | 7:30 AM | 8:00 AM | 8:30 AM | 9:00 AM | 9:30 AM | 10:00 AM | 10:30 AM | 11:00 AM | 11:30 AM | 12:00 PM | 12:30 PM | 1:00 PM | 1:30 PM | 2:00 PM | 2:30 PM | 3:00 PM | 3:30 PM | 4:00 PM | 4:30 PM | 5:00 PM | 5:30 PM | 6:00 PM | 6:30 PM | 7:00 PM | 7:30 PM | 8:00 PM | 8:30 PM | 9:00 PM | 9:30 PM | 10:00 PM | . | ",
    "url": "http://localhost:4000/sp23/schedule/#daily-schedule-updated-each-week",
    "relUrl": "/schedule/#daily-schedule-updated-each-week"
  },"27": {
    "doc": "Daily Schedule",
    "title": "Monday",
    "content": ". | Lab Ben 8:00 AM–10:00 AM Sutardja 200 | Lab Brendan 9:00 AM–11:00 AM Discord | Lecture 10:00 AM–11:00 AM Zoom | Lab Vaibhav 12:00 PM–2:00 PM Sutardja 200 | Lab Nick 2:00 PM–4:00 PM Sutardja 200 | Lab Sarah and Remote Lab Yishu 12:00 PM–2:00 PM Sarah's in Sutardja 200 and Yishu's on Discord | . | ",
    "url": "http://localhost:4000/sp23/schedule/",
    "relUrl": "/schedule/"
  },"28": {
    "doc": "Daily Schedule",
    "title": "Tuesday",
    "content": ". | Lab Jake 8:00 AM–10:00 AM Sutardja 200 | Lab Kellyann 10:00 AM–12:00 PM Sutardja 200 | Lab Arrushi 12:00 PM–2:00 PM Sutardja 200 | . | ",
    "url": "http://localhost:4000/sp23/schedule/",
    "relUrl": "/schedule/"
  },"29": {
    "doc": "Daily Schedule",
    "title": "Wednesday",
    "content": ". | Lecture 10:00 AM–11:00 AM Zoom | Lab Ben 8:00 AM–10:00 AM Sutardja 200 | Lab Brendan 9:00 AM–11:00 AM Discord | Lab Ze 10:00 AM–12:00 PM Sutardja 200 | Lab Vaibhav 12:00 PM–2:00 PM Sutardja 200 | Lab Nick 2:00 PM–4:00 PM Sutardja 200 | Lab Sarah and Remote Lab Yishu 12:00 PM–2:00 PM Sarah's in Sutardja 200 and Yishu's on Discord | . | ",
    "url": "http://localhost:4000/sp23/schedule/",
    "relUrl": "/schedule/"
  },"30": {
    "doc": "Daily Schedule",
    "title": "Thursday",
    "content": ". | Lab Jake 8:00 AM–10:00 AM Sutardja 200 | Lab Kellyann 10:00 AM–12:00 PM Sutardja 200 | Lab Arrushi 12:00 PM–2:00 PM Sutardja 200 | . | ",
    "url": "http://localhost:4000/sp23/schedule/",
    "relUrl": "/schedule/"
  },"31": {
    "doc": "Daily Schedule",
    "title": "Friday",
    "content": ". | Discussion Vedansh 9:00 AM–10:00 AM TBD | Discussion Brendan 10:00 AM–11:00 AM Zoom | Discussion Maddie 11:00 AM–12:00 PM Moffit 103 | Lab Ze 10:00 AM–12:00 PM Sutardja 200 | Discussion Deeksha 1:00 PM–2:00 PM Wheeler 103 | Discussion Deeksha 2:00 PM–3:00 PM Wheeler 130 | Discussion Vedansh 4:00 PM–5:00 PM Wheeler 20 | . | . --> ",
    "url": "http://localhost:4000/sp23/schedule/",
    "relUrl": "/schedule/"
  },"32": {
    "doc": "Daily Schedule",
    "title": "Daily Schedule",
    "content": " ",
    "url": "http://localhost:4000/sp23/schedule/",
    "relUrl": "/schedule/"
  },"33": {
    "doc": "Staff",
    "title": "Staff",
    "content": "Add ‘berkeley.edu’ to the end of all emails. ",
    "url": "http://localhost:4000/sp23/staff/",
    "relUrl": "/staff/"
  },"34": {
    "doc": "Staff",
    "title": "Instructor",
    "content": "Teaching Professor Dan Garcia . ddgarcia@ . I’m just so delighted to be teaching the course again! I co-invented BJC in 2008 with my good friend and colleague Brian Harvey, and absolutely love teaching it. I’m passionate about bringing engaging and powerful CS “big ideas” to students who normally wouldn’t be exposed to it. I am humbled by all the national attention BJC has received (see the “in the News” part of my website) and hope you find this class beautiful and joyful! When I’m not working, you can find me traveling, playing golf or board games (e.g., Monopoly Deal), or binging shows (anything Pixar or Marvel) with my family. p.s. My wife and I both went to Cal for grad school… Go Bears! . ",
    "url": "http://localhost:4000/sp23/staff/#instructor",
    "relUrl": "/staff/#instructor"
  },"35": {
    "doc": "Staff",
    "title": "Head Teaching Assistants",
    "content": "Imen Guechtouli . imen@ . Hey hey hey!!! It’s going to be a blast getting to know you all! (‘: I’m in my second year studying EECS &amp; (just started pursuing) Cognitive Science, and this will be my third time on staff! My technical interests lie in integrations of human cognitive development research in robotics and machine learning, and I’m growing to love the theory and mathematics behind quantitative big data processes. I came to Cal with no programming experience, and since my first semester here, CS 10 continues to be the community that keeps me going. You can catch me playing volleyball or getting lost in town during my free time (I have no sense of direction!) . Vedansh Malhotra . vedansh@ . Hey there! :) I’m a junior studying CS, Cognitive Science, and Data Science. This is my sixth time on course staff at Cal, fourth time teaching and third time as Head-TA for CS-10. As someone who started out with little programming experience, I believe that CS at Berkeley can be a challenging, yet immensely rewarding experience. My primary goal this semester is to help students discover and come to appreciate the remarkable beauty of problem solving- for which, Computer Science is an indispensable tool! PS: Here’s how my name is pronounced: veið’ãnʃ . ",
    "url": "http://localhost:4000/sp23/staff/#head-teaching-assistants",
    "relUrl": "/staff/#head-teaching-assistants"
  },"36": {
    "doc": "Staff",
    "title": "Teaching Assistants",
    "content": "Annie Miller . anniemiller@ . Hi everyone!I am a fourth year studying environmental sciences and data science. I took CS10 my second semester at Cal and have been with CS10 ever since, as an AI and now a TA for my fifth semester. I love taking long walks, reading, listening to music and podcasts, and baking. I am super excited to be with CS10 this semester and hope you love it as much as I do! . Benjamin Pierias . bpierias@ . Hello! My name is Ben and I’m a Senior majoring in Cognitive Science with a minor in CS! I took CS10 my first semester at Cal (it was actually the class I was most looking forward to) and was blown away with how amazing computer science is. Besides school, I love the outdoors, exercising, learning about the brain, cybersecurity and all things cinema! I can’t wait to show you the joys of computing! . Jalen Gooch . jgooch02@ . Hello! My name is Jalen and I am Third Year double majoring in Cognitive Science and Psychology with minors in Data Science and Journalism! I took CS10 the Spring of my Freshman year, loved it, and have been a part of the course ever since! Outside of academics I look cooking, making oddly specific music playlists, and keeping my 3 month old kitten from tearing up my apartment. I am excited to meet and work with you all this semester! . ",
    "url": "http://localhost:4000/sp23/staff/#teaching-assistants",
    "relUrl": "/staff/#teaching-assistants"
  },"37": {
    "doc": "Staff",
    "title": "Readers",
    "content": "Dorottya Urmossy . durmossy@ . Hi! I’m a sophomore studying Computer Science and Mathematics. I took CS 10 in Fall’21 and was an AI in Spring’21. This is my second time being a reader so I’m very excited! CS 10 was one of my favorite courses, so I hope everyone will have fun while taking it! In my free time I like reading (especially fantasy), sewing and traveling :) . Eric Min Young Park . prk4k@ . Hiiii! I’m Eric, and I’m a sophomore studying EECS. I took CS10 my first semester at Cal and had been an AI in my second, and I had a chance to be a reader over the summer. I enjoy reading, writing stories, finding new music, walking, and playing games. Hope you guys have a great time this spring! . Mehul Gandhi . gandhi@ . Hey everyone! I’m a junior studying Computer Science, and this is my fourth semester working on staff for CS10. I took CS10 during my spring semester of Freshman year and I love the creative and critical thinking aspects that CS provides, so I decided to change my major to CS! This semester, I’m looking into learning fullstack development through personal projects! During my free time, I like to watch anime and k-drama, try out new restaurants, and host social events for clubs! I’m super excited to work with all of you this semester :) . Victoria Phelps . jedi_force@ . Hello Everyone! I’m a sophomore studying CS and this is my third year working with CS10. Currently, I work as an intern at a software company, SAP. I’m also apart of Dan Garcia’s research group, Gamescrafters. When I first took the course, I had no programming experience. I fell in love with it and became a BJC and Snap! evangelist. As a non-traditional student coming back to school at the age of 23, I believe anyone can learn CS, and CS is a field for everyone - no matter your age, skill level, or past performance. ",
    "url": "http://localhost:4000/sp23/staff/#readers",
    "relUrl": "/staff/#readers"
  },"38": {
    "doc": "Syllabus",
    "title": "Syllabus",
    "content": " ",
    "url": "http://localhost:4000/sp23/syllabus/",
    "relUrl": "/syllabus/"
  },"39": {
    "doc": "Syllabus",
    "title": "Table of contents",
    "content": ". | Welcome | Platforms | Primary Course Components | Grading Breakdown | Pro-Student Course Policies | Exam Policy | DSP Accommodations | Extension Requests | Extenuating Circumstances | Late Submissions | Academic Integrity | Diversity and Inclusion Statement | Academic Accommodations Hub | EECS Student Climate &amp; Incident Reporting Form | . ",
    "url": "http://localhost:4000/sp23/syllabus/#table-of-contents",
    "relUrl": "/syllabus/#table-of-contents"
  },"40": {
    "doc": "Syllabus",
    "title": "Welcome",
    "content": "Welcome to CS10: The Beauty and Joy of Computing! We’re really excited to have you on board with us this Spring for a gentle, but thorough introduction to computer science. Our course will start out in the block-based language Snap!, but will transition into Python once you’ve learned some fundamentals of programming. By the end of the course, we hope you’ll walk away with a deeper understanding of the ideas that have come to define computer science, the ability to build your own programs, and the confidence to apply these skills in whichever field you choose to pursue. ",
    "url": "http://localhost:4000/sp23/syllabus/#welcome",
    "relUrl": "/syllabus/#welcome"
  },"41": {
    "doc": "Syllabus",
    "title": "Platforms",
    "content": "This Spring, CS10 will be be primarily in person, but we will be able to provide remote accommodations as needed: . | Course Website: The day-to-day happenings of the course (and links to all the platforms below) can be found at cs10.org. Consult the daily schedule to find the times/locations for all synchronous course activities. | Ed: This will be our main Q&amp;A platform, where you can ask (and answer) questions, see announcements, and read Weekly Blasts, which are required readings. | Gradescope: This is where you will submit Reading Quizzes, Projects 1-4, and the Final Project. | BCourses: Lecture recordings can be found in the Media Gallery on BCourses. | Discord: Hybrid lab sections and office hours will be held via Discord, which offers more interactive, versatile spaces for you to connect with students and staff. | PrairieLearn: The three exams: Quest, Midterm, and Postterm, will be administered via PrairieLearn. You will also submit Project 5 here. | . ",
    "url": "http://localhost:4000/sp23/syllabus/#platforms",
    "relUrl": "/syllabus/#platforms"
  },"42": {
    "doc": "Syllabus",
    "title": "Primary Course Components",
    "content": ". | Lecture: Lecture will be live and in person in Birge Hall (Birge 50). Lectures will be recorded, with recordings posted on the website after class. Lecture introduces concepts and gives you an overview of what is happening in labs and discussions. | Lab Sections: Labs will be held synchronously and are the primary place you will learn to program. Note that you are required to complete all labs with a partner, and partner-matching threads have been added to our EdStem Forum. While lab attendance is not mandatory, you will need to attend lab or office hours to get credit for them. To earn full credit for a lab, it must be completed, submitted, and checked off. Checkoffs are to be completed synchronously either in lab or in staff office hours. If you have a special circumstance where you are unable to check off a lab, you may ask for an extension using our extension form (see the Extensions Requests section). Each lab will (usually) be due by the end of the following lab day, and you can reference the calendar on the CS10 home page to reference the deadlines of all labs. There will be 17 total labs — but only your top 15 lab scores will count towards your grade (i.e. you get two lab drops). Each lab is worth 2 points. Half a point will be deducted for each day that a lab is checked off late; however, a maximum of 1 point will be deducted for any given lab. You should plan on attending the lab you sign up for the entire term, but you may attend other lab sections or office hours to get checked off or get extra help. | Discussion Sections: Discussion sections are where you will delve into the content more deeply with worksheets in traditional “pen-and-paper” style. This is where you will develop the theoretical computational skills needed to understand the basics of programming. While we strongly encourage students to attend Discussions in-person, we will post recordings for students who can not attend some sections. | Office Hours: During office hours, you can meet with a TA for help with course material, assignments, or bigger picture questions. | Instructor Office Hours: Professor Garcia will be hosting Instructor office hours, which you may attend for more conceptual help or to discuss anything you like (e.g. career/major advice or how you’re doing in the class) within reason. | Reading Quizzes: Reading Quizzes are an opportunity for you to explore topics relevant to course content outside of the material presented in class. The readings are also meant to bring awareness to the social implications of computing across the globe, and get you to observe and analyze the ways in which computer science plays fundamental roles in varying aspects. Readings will be posted on the Readings Tab of the course website, and will be due every Friday at 11:59 PM PST. Of the 11 Reading Quizzes, you will get one drop, and each Reading Quiz is worth two points. | Projects: These assignments will be one of the best ways for you to apply what you have learned in lecture, lab and discussion. These will be a bit more time intensive than the other assignments and will require you to be caught up on the components of the course. | Project Parties: These will serve as specialized office hours where you will be able to come work and get help on whatever project is currently assigned. We strongly encourage you to attend project parties as they will help you finish your assignments on time. | . ",
    "url": "http://localhost:4000/sp23/syllabus/#primary-course-components",
    "relUrl": "/syllabus/#primary-course-components"
  },"43": {
    "doc": "Syllabus",
    "title": "Grading Breakdown",
    "content": "| Assignment | Points | . | Quest | 40 | . | Midterm (With Snap!) | 15 | . | Midterm (Without Snap!) | 65 | . | Postterm | 100 | . | Project 1: Wordle™-lite | 10 | . | Project 2: Wordle™ | 20 | . | Project 3: 2048 | 30 | . | Project 4: Explore | 40 | . | Project 5: Python | 50 | . | Final Project | 80 | . | Labs | 30 | . | Reading Quizzes | 20 | . Total: 500 Points . | Letter Grade | Range | . | A+ | 485-500 | . | A | 460-484 | . | A- | 450-459 | . | B+ | 440-449 | . | B | 420-439 | . | B- | 400-419 | . | C+ | 375-399 | . | C | 360-374 | . | C- | 350-359 | . | D | 300-349 | . | F | 0-299 | . ",
    "url": "http://localhost:4000/sp23/syllabus/#grading-breakdown",
    "relUrl": "/syllabus/#grading-breakdown"
  },"44": {
    "doc": "Syllabus",
    "title": "Pro-Student Course Policies",
    "content": " ",
    "url": "http://localhost:4000/sp23/syllabus/#pro-student-course-policies",
    "relUrl": "/syllabus/#pro-student-course-policies"
  },"45": {
    "doc": "Syllabus",
    "title": "Exam Policy",
    "content": "There will be three exams: The Quest, the Midterm and the Postterm Exam. Exams will be take-home and will be conducted online on PrairieLearn. If an emergency comes up close to the exam and you need accommodations, email cs10@ ASAP. Exam logistics and the specific times that exams will be opened, will be sent out in more detail closer to the date of each exam. | Absolute-Clobber Policy: Every exam score can be clobbered by a future exam. If your percentage score on the Midterm is better than your percentage score on the Quest, then we will replace your Quest score with your percentage score on the Midterm. Similarly, the Postterm exam score can be used to clobber both the Midterm and the Quest. | . ",
    "url": "http://localhost:4000/sp23/syllabus/#exam-policy",
    "relUrl": "/syllabus/#exam-policy"
  },"46": {
    "doc": "Syllabus",
    "title": "DSP Accommodations",
    "content": "If you have a DSP accommodation through the university that is not addressed by the above policies, please be sure to submit your official letter through the DSP portal. Once you have done so, we will be able to accommodate you. If you have an accommodation but are unable to promptly submit the letter for whatever reason, please reach out to cs10@. ",
    "url": "http://localhost:4000/sp23/syllabus/#dsp-accommodations",
    "relUrl": "/syllabus/#dsp-accommodations"
  },"47": {
    "doc": "Syllabus",
    "title": "Extension Requests",
    "content": "We understand that circumstances may arise that will cause you to not be able to meet assignment deadlines. Please use this extension request form (a.k.a +1 Form) to request extensions on deadlines for any labs and/or projects. The policy for extension requests are as follows: = . | For labs, an extension request will grant you an extra lab section in order to complete the lab assignment. For instance, if the lab is due on a Tuesday, then the extension request will make the lab due on a Thursday instead. | For projects, an extension request will grant that your submission deadline for the project be extended to the deadline of the next project. For instance, if you request an extension for Project 1, your new deadline for submitting Project 1 will be the same day that Project 2 is due. | . Extension requests are automatically approved after submission of the form, and you may use as many extension requests as you wish throughout the semester. However, you can only use one extension request for a single assignment. If you require extra time for an assignment you already submitted an extension request for, you must submit the extenuating circumstances form (see next section). NOTE: If you added the course late, please use your updated deadline as the ‘original due date’. Important: While extensions may not be visible on PrairieLearn/Gradescope (your assignments may be marked ‘late’), they will be factored in when we compute your final grade. ",
    "url": "http://localhost:4000/sp23/syllabus/#extension-requests",
    "relUrl": "/syllabus/#extension-requests"
  },"48": {
    "doc": "Syllabus",
    "title": "Extenuating Circumstances",
    "content": "For situations that require extra time that a regular extension request cannot resolve, please fill out the extenuating circumstances form (a.k.a. +2 Form). The extensions granted for such circumstances are double the time allotted for regular extension requests. (This means two extra lab sections for labs and project n will get extended to be due on the deadline of project n+2.) . All students are only allowed one free submission of this form throughout the semester. However, we understand that there may be circumstances that will cause you to need this form more than once. If that’s the case, you must reach out to your Lab TA and/or email cs10@ to address your case. We cannot guarantee that your request will be granted. Feel free to reach out if you feel that your case was not rightfully addressed. At the end of the day, we’re here to help you succeed in our course. ",
    "url": "http://localhost:4000/sp23/syllabus/#extenuating-circumstances",
    "relUrl": "/syllabus/#extenuating-circumstances"
  },"49": {
    "doc": "Syllabus",
    "title": "Late Submissions",
    "content": "Late submissions for projects will be handled on a case-by-case basis. If for some reason you cannot make a deadline, please fill out the extension form (see section above). If you do not reach out to anyone in advance, we reserve the right to mark the submission down by 10% for each day that it is late. ",
    "url": "http://localhost:4000/sp23/syllabus/#late-submissions",
    "relUrl": "/syllabus/#late-submissions"
  },"50": {
    "doc": "Syllabus",
    "title": "Academic Integrity",
    "content": "Let’s get honest about being honest. It is truly a disappointment to catch students cheating. All we really want is for you to learn the material and if the class is stressful enough that you feel the need to cheat, we have failed as instructors. If you are feeling stressed out in the course, please tell us. We will do what we can to help you. Maintaining academic integrity is a crucial part of your learning experience, as cheating prevents us as instructors from understanding where our model of instruction isn’t working. We understand that academics can be stressful and that it might be tempting to cheat; however, there are ways to meet your goals that don’t require academically dishonest means. Here, we will lay out our academic integrity policies and some good practices that will help you avoid academic dishonesty and improve your overall mastery of the material. What constitutes cheating? . | Copying part or all of another student’s project code with the exception of your partner(s) assuming that the project you are working on allows for partnered work. This includes students from previous semesters (we still have their code and will know if you do this). | Sharing or receiving the exact steps used to solve a project problem (even if code is not explicitly sent). | Copying part or all of another student’s exam answers. | Collaborating with another student when taking the quest, midterm, or Post-term exams by receiving or giving assistance of any kind. | Copying code from online sources without crediting them | . What constitutes collaboration? . | Asking instead of telling. If you’re working with your friends and one of them is stuck on a part of an assignment, try to ask them guiding questions instead of telling them the answer. | Keeping things conceptual! It’s more beneficial to your learning if you come up with a solution yourself, rather than having it told to you. This also applies if you are helping someone else. We highly encourage collaboration, so let’s define what that means. Discussing approaches to problems is fine (in fact, we actively encourage it), as long as you eventually arrive at a good enough understanding of the problem that you are able to code the solution completely by yourself. You should not allow concerns about cheating to get in the way of discussing the class material with your classmates. It is okay if you have received some help with ideas along the way (but not a fully worked out solution).* *This policy was adapted from Professor Alistair Sinclair’s policy for CS 172. | . What happens if you cheat? We will set up a meeting with you to discuss the situation and determine the consequences. ",
    "url": "http://localhost:4000/sp23/syllabus/#academic-integrity",
    "relUrl": "/syllabus/#academic-integrity"
  },"51": {
    "doc": "Syllabus",
    "title": "Diversity and Inclusion Statement",
    "content": "We recognize that computer science is a demographically skewed field in the United States, and that even at Berkeley, minoritized students can find themselves feeling alone. It is our goal in this course to deliver an equitable learning experience for everyone involved. Concretely, this means a few things: . | In addition to teaching the technical skills necessary for programming, we will also teach the social implications of computer science. In doing so, we will directly address the contributions of underrepresented groups to the field, which are often overlooked. | We will do our absolute best to show you that while bias, discrimination, and judgment still exist, they should not stand in the way of you learning computer science. While acknowledging the struggles many students may face, we also hope to show that computer science is a field anyone can be successful in (in other words, there is no innate “talent” or “trait” required to understand computer science). Of course, different people have different opportunities, but one of the goals of CS10 is to equalize the playing field. | Discrimination or disrespect on the basis of race, ethnicity, religion, socioeconomic status, ability, gender, or sexual orientation will be tolerated under no circumstances. Should someone make you feel uncomfortable or disrespected in any way, please let the instructor/Head TA know immediately via email (cs10@) or by coming to office hours. You can also fill out the EECS Incident Reporting Form. | . ",
    "url": "http://localhost:4000/sp23/syllabus/#diversity-and-inclusion-statement",
    "relUrl": "/syllabus/#diversity-and-inclusion-statement"
  },"52": {
    "doc": "Syllabus",
    "title": "Academic Accommodations Hub",
    "content": "Here’s a link to the Academic Accommodations Hub. ",
    "url": "http://localhost:4000/sp23/syllabus/#academic-accommodations-hub",
    "relUrl": "/syllabus/#academic-accommodations-hub"
  },"53": {
    "doc": "Syllabus",
    "title": "EECS Student Climate &amp; Incident Reporting Form",
    "content": "It is very important to the EECS Department that every student in the EECS community feels safe, respected and welcome. We recognize though that incidents happen, sometimes unintentionally, that run counter to that goal. The EECS department provides a secure and anonymous form that can be used to report incidents including (but not limited to) of microaggressions, discrimination, marginalizing / alienating behaviour, etc. ",
    "url": "http://localhost:4000/sp23/syllabus/#eecs-student-climate--incident-reporting-form",
    "relUrl": "/syllabus/#eecs-student-climate--incident-reporting-form"
  }
}
